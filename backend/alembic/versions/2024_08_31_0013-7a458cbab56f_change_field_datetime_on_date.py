"""change field datetime on date

Revision ID: 7a458cbab56f
Revises: 62d4ddef51f9
Create Date: 2024-08-31 00:13:29.823082

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "7a458cbab56f"
down_revision: Union[str, None] = "62d4ddef51f9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "habits",
        "start_date",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.Date(),
        existing_nullable=False,
        existing_server_default=sa.text(
            "'2024-08-26 18:58:55.922111'::timestamp without time zone"
        ),
    )
    op.alter_column(
        "trackings",
        "date",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.Date(),
        existing_nullable=False,
        existing_server_default=sa.text(
            "'2024-08-30 19:13:28.976379'::timestamp without time zone"
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "trackings",
        "date",
        existing_type=sa.Date(),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text(
            "'2024-08-30 19:13:28.976379'::timestamp without time zone"
        ),
    )
    op.alter_column(
        "habits",
        "start_date",
        existing_type=sa.Date(),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text(
            "'2024-08-26 18:58:55.922111'::timestamp without time zone"
        ),
    )
    # ### end Alembic commands ###
